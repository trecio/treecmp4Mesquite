/* * QuartetDist.java * * Created on 7 czerwiec 2007, 20:24 * * To change this template, choose Tools | Template Manager * and open the template in the editor. */package treecmp.metric;import pal.tree.*;import pal.io.*;import treetool.tree.ParseException;import treetool.tree.Tree;import treetool.distance.*;/** * * @author Damian */public class QuartetMetric extends BaseMetric implements Metric {    //private String name = "Quartet";    /** Creates a new instance of QuartetDist */    public QuartetMetric() {    }    public static double getQuartetDistance(pal.tree.Tree tree1, pal.tree.Tree tree2) {        OutputTarget tree1OT = OutputTarget.openString();        OutputTarget tree2OT = OutputTarget.openString();        TreeUtils.printNH(tree1, tree1OT, false, false);        TreeUtils.printNH(tree2, tree2OT, false, false);        String tree1Newick = tree1OT.getString();        String tree2Newick = tree2OT.getString();        tree1OT.close();        tree2OT.close();        Distance d = new GeneralN2DQDist();        double dist = -1.0;        try {            treetool.tree.Tree tree_tt1 = new treetool.tree.Tree(tree1Newick);            treetool.tree.Tree tree_tt2 = new treetool.tree.Tree(tree2Newick);            DistResult dr = d.getMeasures(tree_tt1, tree_tt2);            dist = (double) (dr.qdist() + dr.q1() + dr.q2());        } catch (ParseException ex) {            ex.printStackTrace();        }        return dist;    }        public double getDistance(pal.tree.Tree t1, pal.tree.Tree t2) {        return QuartetMetric.getQuartetDistance(t1, t2);    }}