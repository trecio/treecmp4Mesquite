package mesquite.treecmp.WeightedMatchingSplitMetric;

import static org.junit.Assert.assertEquals;
import mesquite.treecmp.MetricTest;

import org.junit.Test;

public class WhenCalculatingMatchingSplitDistanceTest extends MetricTest<WeightedMatchingSplitMetric> {
	@Test public void itShouldCalculateDistanceForTwoTreesFromBogdGiaroPaper() {
		final String t1 = "((a,b,c,d):10,e,(f,g,h,i,j));";
		final String t2 = "((a,b,c,d,e):10,f,(g,h,i,j));";
		
		assertEquals(11., getMetricValue(t1, t2), 1e-6);
	}
	
	@Test public void itShouldCalculateDistanceForOtherTwoTreesFromBogdGiaroPaper() {
		final String t1 = "((a,b,c,d):10,e,f,g,h,i,j);";
		final String t2 = "((a,b,c,d,e):9,f,(g,h,i,j));";
		
		assertEquals(17., getMetricValue(t1, t2), 1e-6);
	}
	
	@Test public void itShouldCalculateDistanceBetweenTwoTreesForWhichNumericErrorsCanCauseMatchingCalculationToHang() {
		final String t1 = "(aa:2.976485250878692e-002,(((((b:6.571457871564028e-003,c:2.793365907904793e-003):3.814190559117286e-002,(d:7.814496903482535e-001,e:1.341232696449609e-001):6.667185282233779e-002):4.275491657767609e-002,f:3.935951714431411e-002):8.621947836978464e-003,(((g:2.307540201780765e-002,(h:3.843656287185737e-002,(i:1.855600722047708e-002,j:3.139717306539597e-002):2.290817249793676e-003):1.812465484060978e-002):6.046232898784520e-002,(((k:3.729406747391247e-002,((l:3.745743892646374e-003,(m:1.412685366839319e-002,n:1.908193707233764e-003):8.075529413953566e-003):3.651178962326356e-002,o:3.273591455729712e-002):7.162855095792034e-003):3.407836701672109e-004,(p:2.817959347847019e-002,r:1.280755090270522e-002):8.862265298898856e-003):1.721060781587320e-001,((s:4.371646078643216e-003,(t:8.928050053431226e-003,u:9.473014923323146e-003):1.711906202806951e-002):1.887461401396988e-002,(v:8.125172499203082e-003,w:2.068584547375740e-003):1.525619828816073e-002):4.841714756471174e-002):4.675530756972030e-002):3.080356345454639e-002,((x:4.679276889638203e-002,y:1.785192027285036e-002):8.643193171409597e-002,(z:6.348474875898832e-003,(ab:4.765141027899879e-002,ac:1.966796523542572e-002):7.034424637939313e-004):2.386286425292507e-002):4.916090852821656e-002):2.572449283980762e-002):8.301603697787728e-002,ad:5.125185232612203e-002):1.947743510633469e-002,ae:2.626809219466214e-002)";
		final String t2 = "(aa:8.094243520071162e-003,((((((k:4.541309349194483e-002,(r:2.801325227634142e-002,p:1.998520101994877e-002):1.926384356402637e-002):9.786848380300521e-003,((l:1.611796581303797e-002,(m:2.866279361294567e-003,n:1.826470711619282e-002):2.882033479298119e-002):2.727155452956220e-002,o:5.950077908896738e-002):1.698188132663333e-003):1.114193681860114e-001,((v:1.107543167391302e-002,w:7.323341621486171e-003):3.298854544664828e-002,(s:8.473121244885017e-003,(t:1.069280446582888e-002,u:6.635453532252705e-002):1.854856746036492e-002):2.260986170298297e-002):5.830967813761554e-002):5.658425582838049e-002,((h:1.884908586884485e-002,(j:4.896298650960237e-002,i:3.518710042199393e-002):2.586320865089799e-002):9.976438515347788e-003,g:2.775297162481460e-002):7.741733512914148e-002):8.030539792136185e-003,((((ac:5.172346729839815e-002,z:2.005241791484898e-002):2.248030954349229e-002,ab:4.342790984716133e-002):1.299064262982662e-002,(x:8.184978497223783e-002,y:1.439930793336308e-002):6.811234062430070e-002):5.529380297229629e-002,(((b:4.275535386776198e-003,c:1.812892502256237e-002):4.412583890544875e-002,(d:3.039837209991861e-001,e:1.819512386977729e-001):2.897495933611544e-002):1.903906090226193e-002,f:7.503384491647075e-002):4.394080432414897e-002):1.176015495932415e-002):5.045409587196656e-002,ad:2.867145882157936e-002):3.807703609912300e-002,ae:1.903013145467407e-002);";
		
		assertEquals(5.0903678, getMetricValue(t1, t2), 1e-6);
	}
	

	@Override
	protected WeightedMatchingSplitMetric createMetric() {
		return new WeightedMatchingSplitMetric();
	}
}
